(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{487:function(e,t,o){"use strict";o.r(t);var a=o(0),n=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"starting-rocket-pool-and-setting-up-a-node-wallet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#starting-rocket-pool-and-setting-up-a-node-wallet"}},[e._v("#")]),e._v(" Starting Rocket Pool and Setting Up a Node Wallet")]),e._v(" "),t("p",[e._v("At this point, you should have the complete Rocket Pool infrastructure running, including the Smartnode stack, an Execution (ETH1) and an Consensus (ETH2) client.\nYou should also have hardened your operating system from outside attackers.\nIf you've completed both of these steps, you're ready to create a Rocket Pool node and begin staking.\nIf not, please review the previous sections and return here once you've completed those steps.")]),e._v(" "),t("h2",{attrs:{id:"starting-and-stopping-the-rocket-pool-services"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#starting-and-stopping-the-rocket-pool-services"}},[e._v("#")]),e._v(" Starting and Stopping the Rocket Pool Services")]),e._v(" "),t("Tabs",{attrs:{type:"border-card"}},[t("Tab",{attrs:{label:"Docker (Default) Mode"}},[t("p",[e._v("Now that you have the Smartnode installed, starting the stack is easy.\nSimply enter the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool service start\n")])])]),t("p",[e._v("This command will create all of the necessary Docker images if they don't already exist, make sure the Rocket Pool docker network and storage volumes have been initialized, and update any containers if they no longer match the configuration settings from "),t("code",[e._v("rocketpool service config")]),e._v("'s UI.")]),e._v(" "),t("p",[e._v("The first time you do it, the output should look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ rocketpool service start\n\nCreating network "rocketpool_net" with the default driver\nCreating volume "rocketpool_eth1clientdata" with default driver\nCreating volume "rocketpool_eth2clientdata" with default driver\nCreating rocketpool_eth1 ...\nCreating rocketpool_eth1 ... done\nCreating rocketpool_eth2 ...\nCreating rocketpool_api  ...\nCreating rocketpool_api  ... done\nCreating rocketpool_eth2 ... done\nCreating rocketpool_watchtower ...\nCreating rocketpool_node       ...\nCreating rocketpool_validator  ...\nCreating rocketpool_validator  ... done\nCreating rocketpool_node       ... done\nCreating rocketpool_watchtower ... done\n')])])]),t("p",[e._v("If it does, then the Smartnode stack has been successfully initialized and is now running.")]),e._v(" "),t("p",[e._v("If you ever need to stop the services (for example, during an upgrade or because you need to do maintenance), you can use "),t("code",[e._v("rocketpool service stop")]),e._v(" to shut everything down.\nThe output should look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ rocketpool service stop\n\nAre you sure you want to pause the Rocket Pool service? Any staking minipools will be penalized! [y/n]\ny\n\nStopping rocketpool_node       ...\nStopping rocketpool_validator  ...\nStopping rocketpool_watchtower ...\nStopping rocketpool_eth2       ...\nStopping rocketpool_api        ...\nStopping rocketpool_eth1       ...\nStopping rocketpool_validator  ... done\nStopping rocketpool_node       ... done\nStopping rocketpool_watchtower ... done\nStopping rocketpool_api        ... done\nStopping rocketpool_eth2       ... done\nStopping rocketpool_eth1       ... done\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("Once you call this, Rocket Pool will not automatically start after a system reboot.\nYou will have to call "),t("code",[e._v("rocketpool service start")]),e._v(" to start all of the Docker containers and enable auto-start on reboot again.")])])]),e._v(" "),t("Tab",{attrs:{label:"Hybrid Mode"}},[t("p",[e._v("Now that you have the Smartnode installed, starting the stack is easy.\nSimply enter the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool service start\n")])])]),t("p",[e._v("This command will create all of the necessary Docker images if they don't already exist, make sure the Rocket Pool docker network and storage volumes have been initialized, and update any containers if they no longer match the configuration settings from "),t("code",[e._v("rocketpool service config")]),e._v("'s UI.")]),e._v(" "),t("p",[e._v("The first time you do it, the output should look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('$ rocketpool service start\n\nCreating network "rocketpool_net" with the default driver\nCreating rocketpool_api  ...\nCreating rocketpool_api  ... done\nCreating rocketpool_watchtower ...\nCreating rocketpool_node       ...\nCreating rocketpool_validator  ...\nCreating rocketpool_validator  ... done\nCreating rocketpool_node       ... done\nCreating rocketpool_watchtower ... done\n')])])]),t("p",[e._v("If it does, then the Smartnode stack has been successfully initialized and is now running.")]),e._v(" "),t("p",[e._v("Note that your external Execution (ETH1) and/or Consensus (ETH2) clients will not be listed here, as Rocket Pool does not manage them and thus cannot start them.\nYou will have to ensure that you've started them separately, using whatever mechanism you originally created them with.")]),e._v(" "),t("p",[e._v("If you ever need to stop the services (for example, during an upgrade or because you need to do maintenance), you can use "),t("code",[e._v("rocketpool service stop")]),e._v(" to shut everything down.\nThe output should look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ rocketpool service stop\n\nAre you sure you want to pause the Rocket Pool service? Any staking minipools will be penalized! [y/n]\ny\n\nStopping rocketpool_node       ...\nStopping rocketpool_validator  ...\nStopping rocketpool_watchtower ...\nStopping rocketpool_api        ...\nStopping rocketpool_validator  ... done\nStopping rocketpool_node       ... done\nStopping rocketpool_watchtower ... done\nStopping rocketpool_api        ... done\n")])])]),t("p",[e._v("Again, you will be responsible for manually ensuring that your Execution (ETH1) and Consensus (ETH2) clients are stopped appropriately as well, if you want them to be stopped.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("Once you call this, Rocket Pool will not automatically start after a system reboot.\nYou will have to call "),t("code",[e._v("rocketpool service start")]),e._v(" to start all of the Docker containers and enable auto-start on reboot again.")])])]),e._v(" "),t("Tab",{attrs:{label:"Native Mode"}},[t("p",[e._v("In native mode, you already set up and started the Smartnode services as part of the "),t("RouterLink",{attrs:{to:"/guides/node/native.html"}},[e._v("Configuring a Native Rocket Pool Node without Docker")]),e._v(" section.")],1),e._v(" "),t("p",[e._v("Assuming you set them up as "),t("code",[e._v("systemd")]),e._v(" services, you can start them with "),t("code",[e._v("sudo systemctl start ...")]),e._v(".\nFor example, if you are using Geth for Execution (ETH1) and Teku for Consensus (ETH2):")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("sudo systemctl start geth teku-bn teku-vc rp-node rp-watchtower\n")])])]),t("p",[e._v("Stopping them is the same process, but using "),t("code",[e._v("sudo systemctl stop ...")]),e._v(".")]),e._v(" "),t("p",[e._v("Note that stopping the services "),t("strong",[e._v("does not disable autostart")]),e._v("; the processes will automatically start upon a reboot.")])])],1),e._v(" "),t("h2",{attrs:{id:"confirming-the-correct-version-and-network"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#confirming-the-correct-version-and-network"}},[e._v("#")]),e._v(" Confirming the Correct Version and Network")]),e._v(" "),t("p",[e._v("Once the containers or services are up, a good first step is to confirm that you have the correct versions of the clients and are on the network that you expect.\nYou can do this with the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool service version\n")])])]),t("p",[e._v("The output will look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Your Smartnode is currently using the Ethereum Mainnet.\n\nRocket Pool client version: 1.0.0-pre\nRocket Pool service version: 1.0.0-pre\nSelected Eth 1.0 client: Geth (ethereum/client-go:v1.10.8)\nSelected Eth 2.0 client: Nimbus (statusim/nimbus-eth2:multiarch-v1.4.2)\n\n")])])]),t("p",[e._v("The first line will tell you if your Smartnode is configured for the Ethereum mainnet or for the Prater testnet.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[t("strong",[e._v("For Docker / Hybrid users:")]),e._v("\nIf you are not on the network you expect to be on, go back to the Installing Rocket Pool section and review the installation instructions - you may have missed the portion that has different instructions depending on which network you want to use.")]),e._v(" "),t("p",[t("strong",[e._v("For Native users:")]),e._v("\nIf you accepted the default settings when you first ran "),t("code",[e._v("rp service config")]),e._v(", then it's possible that the network reported here is incorrect.\nHowever, your "),t("code",[e._v("systemctl")]),e._v(" service definitions "),t("em",[e._v("should")]),e._v(" have the correct network baked directly into the command line arguments so you can ignore this discrepancy unless it bothers you.")])]),e._v(" "),t("p",[e._v("The second set of lines will tell you which clients you're using, and which versions of them are defined in Rocket Pool's "),t("code",[e._v("config.yml")]),e._v(" file.")]),e._v(" "),t("h2",{attrs:{id:"checking-the-service-status-and-logs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#checking-the-service-status-and-logs"}},[e._v("#")]),e._v(" Checking the Service Status and Logs")]),e._v(" "),t("p",[e._v("Now that the Smartnode services have been started, it's a good idea to check that they're running correctly without errors.")]),e._v(" "),t("Tabs",{attrs:{type:"border-card"}},[t("Tab",{attrs:{label:"Docker (Default) Mode"}},[t("p",[e._v("The first thing to check is whether the Docker containers are running well, or if they are constantly restarting due to an error.\nRun the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker ps\n")])])]),t("p",[e._v("The results should look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('CONTAINER ID   IMAGE                               COMMAND                  CREATED       STATUS         PORTS                                                                                                         NAMES\na3c22f54eff0   rocketpool/smartnode:v1.0.0-rc3     "/go/bin/rocketpool …"   2 hours ago   Up 2 minutes                                                                                                                 rocketpool_node\n0d5818868ef6   statusim/nimbus-eth2:amd64-v1.3.0   "sh /setup/start-val…"   2 hours ago   Up 2 minutes                                                                                                                 rocketpool_validator\n88bea525fa89   rocketpool/smartnode:v1.0.0-rc3     "/go/bin/rocketpool …"   2 hours ago   Up 2 minutes                                                                                                                 rocketpool_watchtower\n4dfc7a2e939b   statusim/nimbus-eth2:amd64-v1.3.0   "sh /setup/start-bea…"   2 hours ago   Up 2 minutes   0.0.0.0:9001->9001/tcp, 0.0.0.0:9001->9001/udp, :::9001->9001/tcp, :::9001->9001/udp                          rocketpool_eth2\n62314e5a0ecf   rocketpool/smartnode:v1.0.0-rc3     "/bin/sleep infinity"    2 hours ago   Up 2 minutes                                                                                                                 rocketpool_api\nac629c08c896   ethereum/client-go:v1.10.3          "sh /setup/start-nod…"   2 hours ago   Up 2 minutes   8545-8546/tcp, 0.0.0.0:30303->30303/tcp, 0.0.0.0:30303->30303/udp, :::30303->30303/tcp, :::30303->30303/udp   rocketpool_eth1\n')])])]),t("p",[e._v("The key thing to check is the "),t("code",[e._v("STATUS")]),e._v(" column.\nIf none of the entries state "),t("code",[e._v("Restarting...")]),e._v(", then the containers should be running properly (see the below note for an exception about the "),t("code",[e._v("rocketpool_validator")]),e._v(" container).")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("If you are using Prysm or Teku as your Consensus (ETH2) client, you will likely notice the "),t("code",[e._v("rocketpool_validator")]),e._v(" container is constantly restarting.\nThis is okay!\nThe validator container will fail until a new validator has been created using the "),t("code",[e._v("rocketpool node deposit")]),e._v(" command, which we will cover in the "),t("RouterLink",{attrs:{to:"/guides/node/create-validator.html"}},[e._v("Creating a Minipool (ETH2 Validator)")]),e._v(" section.\nOnce this is done, the container will function correctly - until then, just ignore it.")],1)]),e._v(" "),t("p",[e._v("Still, it might be useful to check the logs of the various services.")]),e._v(" "),t("p",[e._v("To check on the logs, use the "),t("code",[e._v("rocketpool service logs <container>")]),e._v(" command, where "),t("code",[e._v("<container>")]),e._v(" is one of "),t("code",[e._v("eth1")]),e._v(", "),t("code",[e._v("eth2")]),e._v(", "),t("code",[e._v("validator")]),e._v(", "),t("code",[e._v("api")]),e._v(", "),t("code",[e._v("node")]),e._v(", or "),t("code",[e._v("watchtower")]),e._v(".")]),e._v(" "),t("p",[e._v("For example, to check the logs for your ETH1 client:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ rocketpool service logs eth1\n\nAttaching to rocketpool_eth1\neth1_1        | INFO [06-17|05:17:19.052] Imported new block receipts              count=25   elapsed=26.651ms    number=247,000   hash=6583ec..35eb1c age=2y3mo2w  size=15.72KiB\neth1_1        | INFO [06-17|05:17:19.098] Imported new block headers               count=192  elapsed=18.515ms    number=247,551   hash=b7d5e4..d49faf age=2y3mo2w\neth1_1        | INFO [06-17|05:17:19.334] Imported new block receipts              count=371  elapsed=46.450ms    number=247,371   hash=dd3240..1ed173 age=2y3mo2w  size=266.59KiB\neth1_1        | INFO [06-17|05:17:19.354] Imported new state entries               count=1271 elapsed=2.866ms     processed=374,695 pending=3134  trieretry=0   coderetry=0  duplicate=0 unexpected=0\neth1_1        | INFO [06-17|05:17:19.441] Imported new block headers               count=384  elapsed=35.331ms    number=247,935   hash=4c4dba..5bf8b6 age=2y3mo2w\neth1_1        | INFO [06-17|05:17:19.460] Imported new block receipts              count=180  elapsed=33.648ms    number=247,551   hash=b7d5e4..d49faf age=2y3mo2w  size=128.73KiB\neth1_1        | INFO [06-17|05:17:19.480] Imported new block headers               count=192  elapsed=19.122ms    number=248,127   hash=aa70b9..40d139 age=2y3mo1w\neth1_1        | INFO [06-17|05:17:19.486] Imported new block receipts              count=6    elapsed=26.042ms    number=247,557   hash=fd6656..ca2439 age=2y3mo2w  size=3.77KiB\n")])])]),t("p",[e._v("You should do this for both "),t("code",[e._v("eth1")]),e._v(" and "),t("code",[e._v("eth2")]),e._v(" to make sure both clients are running without any errors.")])]),e._v(" "),t("Tab",{attrs:{label:"Hybrid Mode"}},[t("p",[e._v("The first thing to check is whether the Docker containers are running well, or if they are constantly restarting due to an error.\nRun the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker ps\n")])])]),t("p",[e._v("The results should look like this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('CONTAINER ID   IMAGE                               COMMAND                  CREATED       STATUS         NAMES\na3c22f54eff0   rocketpool/smartnode:v1.0.0-rc3     "/go/bin/rocketpool …"   2 hours ago   Up 2 minutes   rocketpool_node\n0d5818868ef6   sigp/lighthouse:v1.4.0              "sh /setup/start-val…"   2 hours ago   Up 2 minutes   rocketpool_validator\n88bea525fa89   rocketpool/smartnode:v1.0.0-rc3     "/go/bin/rocketpool …"   2 hours ago   Up 2 minutes   rocketpool_watchtower\n62314e5a0ecf   rocketpool/smartnode:v1.0.0-rc3     "/bin/sleep infinity"    2 hours ago   Up 2 minutes   rocketpool_api\n')])])]),t("p",[e._v("The key thing to check is the "),t("code",[e._v("STATUS")]),e._v(" column.\nIf none of the entries state "),t("code",[e._v("Restarting...")]),e._v(", then the containers should be running properly (see the below note for an exception about the "),t("code",[e._v("rocketpool_validator")]),e._v(" container).")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("If you are using Prysm or Teku as your Consensus (ETH2) client, you will likely notice the "),t("code",[e._v("rocketpool_validator")]),e._v(" container is constantly restarting.\nThis is okay!\nThe validator container will fail until a new validator has been created using the "),t("code",[e._v("rocketpool node deposit")]),e._v(" command, which we will cover in the "),t("RouterLink",{attrs:{to:"/guides/node/create-validator.html"}},[e._v("Creating a Minipool (ETH2 Validator)")]),e._v(" section.\nOnce this is done, the container will function correctly - until then, just ignore it.")],1)]),e._v(" "),t("p",[e._v("Still, it might be useful to check the logs of the various services.")]),e._v(" "),t("p",[e._v("To check on the logs, use the "),t("code",[e._v("rocketpool service logs <container>")]),e._v(" command, where "),t("code",[e._v("<container>")]),e._v(" is one of "),t("code",[e._v("eth1")]),e._v(", "),t("code",[e._v("eth2")]),e._v(", "),t("code",[e._v("validator")]),e._v(", "),t("code",[e._v("api")]),e._v(", "),t("code",[e._v("node")]),e._v(", or "),t("code",[e._v("watchtower")]),e._v(".")]),e._v(" "),t("p",[e._v("You can ignore "),t("code",[e._v("eth1")]),e._v(" and/or "),t("code",[e._v("eth2")]),e._v(" based on which ones you are maintaining externally, but if you are letting Rocket Pool manage one of them, you should check the status of it now using this command.")])]),e._v(" "),t("Tab",{attrs:{label:"Native Mode"}},[t("p",[e._v("The easiest way to check the status and logs in native mode is to use the logging scripts that you created when you first set up the Smartnode services.")]),e._v(" "),t("p",[e._v("For example, to check Geth's log, you would just run:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("/srv/geth/log.sh\n")])])]),t("p",[e._v("You should see that it is slowly chugging along without any errors.\nDo this for your Execution (ETH1) and Consensus (ETH2) clients now to verify that they are working properly.")])])],1),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("When you're done looking at the logs, you can exit and return to the command prompt using "),t("code",[e._v("Ctrl + C")]),e._v(".")])]),e._v(" "),t("h2",{attrs:{id:"setting-up-a-wallet"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-wallet"}},[e._v("#")]),e._v(" Setting up a Wallet")]),e._v(" "),t("p",[e._v("If the Smartnode services are up and running, the next step is to set up an ETH1 wallet for your node.\nThis is simply an ETH1 address that will hold your node's funds - it will use this to send ETH to your minipool when you begin staking, pay for gas during various transactions, and other various operations.")]),e._v(" "),t("p",[e._v("You have the option of either creating a brand new wallet from scratch, or importing / recovering an existing wallet or address.\nPlease choose which option you'd like from the tabs below.")]),e._v(" "),t("Tabs",{attrs:{type:"border-card"}},[t("Tab",{attrs:{label:"Creating a New Wallet"}},[t("p",[e._v("The most common way to run a node is to create a new ETH1 address that is dedicated to the node.\nThe Smartnode CLI provides a way to do this easily:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool wallet init\n")])])]),t("p",[e._v("You will first be prompted for a password to protect your wallet's private key.\nNext, you will be presented the "),t("strong",[e._v("unique 24-word mnemonic")]),e._v(" for your new wallet.\nThis is the "),t("strong",[e._v("recovery phrase")]),e._v(" for your wallet.\nIf you ever lose your machine, you can use this phrase to regenerate your wallet and resurrect all of the Consensus (ETH2) validators attached to it.")]),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("It is "),t("strong",[e._v("essential")]),e._v(" that you write this mnemonic down because this is the only time it will be shown to you, but keep it somewhere safe.\nAnyone with this phrase can gain control of your wallet.")])]),e._v(" "),t("p",[e._v("Once you confirm your mnemonic phrase, you will be presented with the unique ETH1 address for your node wallet.")])]),e._v(" "),t("Tab",{attrs:{label:"Recovering / Importing an Existing Wallet"}},[t("p",[e._v("If you already have a node wallet that you created in a previous installation of the Smartnode, or if you want to import an address that you created elsewhere (such as with "),t("strong",[e._v("Allnodes")]),e._v("), please follow the instructions in the "),t("RouterLink",{attrs:{to:"/guides/node/recovering-rp.html"}},[e._v("Importing an Existing Wallet for your Node")]),e._v(" guide.")],1),e._v(" "),t("p",[e._v("Return here when you're finished.")])])],1),e._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("As of the current build, Rocket Pool needs to have access to your wallet's private key in order to perform its automatic duties.\n"),t("strong",[e._v("This means that the private key will exist in a file on your machine.")]),e._v("\nIf an attacker manages to gain access to your machine, they could gain access to your node wallet and steal all of the tokens that it contains!\nPlease ensure that you have followed the security guide in the "),t("RouterLink",{attrs:{to:"/guides/node/securing-your-node.html"}},[e._v("Securing your Node")]),e._v(" section before you continue, and are comfortable with your security posture.")],1)]),e._v(" "),t("Tabs",{attrs:{type:"border-card"}},[t("Tab",{attrs:{label:"Docker and Hybrid Modes"}},[t("p",[e._v("Your wallet's private key will be stored in a file located at "),t("code",[e._v("~/.rocketpool/data/wallet")]),e._v(".")]),e._v(" "),t("p",[e._v("The password used to encrypt your wallet's key will be stored in "),t("code",[e._v("~/.rocketpool/data/password")]),e._v(".\nThis is the file that must be protected at all times.")])]),e._v(" "),t("Tab",{attrs:{label:"Native Mode"}},[t("p",[e._v("The wallet and password files will be stored in the "),t("code",[e._v("data")]),e._v(" directory under the Rocket Pool directory that you set up earlier (e.g. "),t("code",[e._v("/srv/rocketpool")]),e._v(").")]),e._v(" "),t("p",[e._v("Your wallet's private key will be stored in a file located at "),t("code",[e._v("/srv/rocketpool/data/wallet")]),e._v(".")]),e._v(" "),t("p",[e._v("The password used to encrypt your wallet's key will be stored in "),t("code",[e._v("/srv/rocketpool/data/password")]),e._v(".\nThis is the file that must be protected at all times.")])])],1),e._v(" "),t("h2",{attrs:{id:"waiting-for-your-eth-clients-to-sync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#waiting-for-your-eth-clients-to-sync"}},[e._v("#")]),e._v(" Waiting for Your ETH Clients to Sync")]),e._v(" "),t("p",[e._v("Now that you have a wallet set up, you're going to want to wait until your Execution (ETH1) and Consensus (ETH2) clients have finished syncing with the network before proceeding.")]),e._v(" "),t("p",[e._v("One easy way to check on their status is with the following command:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rocketpool node sync\n")])])]),t("p",[e._v("This command will show how far along your Execution (ETH1) & Consensus (ETH2) clients are in the syncing process, similar to this:")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ rocketpool node sync\n\nYour Smartnode is currently using the Prater Test Network.\n\nYour eth2 client is on the correct network.\n\nYour primary execution client is fully synced.\nYou do not have a fallback execution client enabled.\nYour consensus client is still syncing (99.69%).\n")])])]),t("p",[e._v("You can call this occasionally to keep tabs on your clients' progress.")]),e._v(" "),t("p",[e._v("To get an actual ETA of the sync time, it's easiest to look at the logs for your clients with "),t("code",[e._v("rocketpool service logs eth1")]),e._v(" and "),t("code",[e._v("rocketpool service logs eth2")]),e._v(" respectively (or the equivalent log script commands if you're using the hybrid / native modes.)\nEach client typically provides an ETA on its sync status in its log output.")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),t("p",[e._v("It can take "),t("strong",[e._v("days")]),e._v(" to fully sync both ETH1 and ETH2 depending on your client selection and your machine's hardware profile.\n"),t("strong",[e._v("This is expected")]),e._v(".\nSit back, relax, and wait for both of them to finish.")])]),e._v(" "),t("h2",{attrs:{id:"next-steps"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next Steps")]),e._v(" "),t("p",[e._v("Once you've imported or recovered your node wallet and your clients are done syncing, follow the next steps in the "),t("RouterLink",{attrs:{to:"/guides/node/cli-intro.html"}},[e._v("Intro to the Command Line Interface")]),e._v(" guide.")],1)],1)}),[],!1,null,null,null);t.default=n.exports}}]);